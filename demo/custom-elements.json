{
  "version": 2,
  "tags": [
    {
      "name": "expansion-panel",
      "description": "A custom element similar to the HTML5 `<details>` element.",
      "jsDoc": "/**\n * A custom element similar to the HTML5 `<details>` element.\n *\n * @element expansion-panel\n *\n * @slot - Slot fot panel content\n * @slot header - Slot for panel header\n *\n * @attr {Boolean} focused - State attribute set when element has focus.\n * @attr {Boolean} focus-ring - State attribute set when focused from keyboard.\n *\n * @cssprop --panel-header-background - Default panel header background color.\n * @cssprop --panel-header-min-height - Panel header minimum height.\n * @cssprop --panel-ripple-background - Active toggle button ripple background.\n *\n * @fires opened-changed - Event fired when expanding / collapsing\n */",
      "attributes": [
        {
          "name": "focused",
          "description": "State attribute set when element has focus.",
          "type": "boolean"
        },
        {
          "name": "focus-ring",
          "description": "State attribute set when focused from keyboard.",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "When true, the panel content is expanded and visible",
          "jsDoc": "/**\n   * When true, the panel content is expanded and visible\n   */",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "Disabled panel can not be expanded or collapsed",
          "jsDoc": "/**\n   * Disabled panel can not be expanded or collapsed\n   */",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "opened",
          "description": "When true, the panel content is expanded and visible",
          "jsDoc": "/**\n   * When true, the panel content is expanded and visible\n   */",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "Disabled panel can not be expanded or collapsed",
          "jsDoc": "/**\n   * Disabled panel can not be expanded or collapsed\n   */",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "opened-changed",
          "description": "Event fired when expanding / collapsing"
        }
      ],
      "slots": [
        {
          "name": "header",
          "description": "Slot for panel header"
        },
        {
          "name": "",
          "description": "Slot fot panel content"
        }
      ],
      "cssProperties": [
        {
          "name": "--panel-ripple-background",
          "description": "Active toggle button ripple background."
        },
        {
          "name": "--panel-header-min-height",
          "description": "Panel header minimum height."
        },
        {
          "name": "--panel-header-background",
          "description": "Default panel header background color."
        }
      ]
    },
    {
      "name": "fancy-accordion",
      "description": "A custom element wrapping several `<expansion-panel>` elements.",
      "jsDoc": "/**\n * A custom element wrapping several `<expansion-panel>` elements.\n *\n * @element fancy-accordion\n *\n * @slot - Slot fot panel elements.\n *\n * @fires opened-changed - Event fired when expanding / collapsing\n */",
      "attributes": [
        {
          "name": "opened",
          "description": "The index of the currently opened panel.",
          "jsDoc": "/**\n   * The index of the currently opened panel.\n   */",
          "type": "number | undefined"
        }
      ],
      "properties": [
        {
          "name": "opened",
          "description": "The index of the currently opened panel.",
          "jsDoc": "/**\n   * The index of the currently opened panel.\n   */",
          "type": "number | undefined"
        }
      ],
      "events": [
        {
          "name": "opened-changed",
          "description": "Event fired when expanding / collapsing"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Slot fot panel elements."
        }
      ],
      "cssProperties": []
    },
    {
      "name": "progress-bar",
      "description": "A custom element similar to the HTML5 `<progress>` element.",
      "jsDoc": "/**\n * A custom element similar to the HTML5 `<progress>` element.\n *\n * @element progress-bar\n *\n * @cssprop --progress-bar-fill-color - Color of the filled progress bar part.\n * @cssprop --progress-bar-opacity - Opacity set on the underlying track.\n */",
      "attributes": [
        {
          "name": "value",
          "description": "Current progress value.",
          "jsDoc": "/**\n   * Current progress value.\n   */",
          "type": "number"
        },
        {
          "name": "min",
          "description": "Minimum bound of the progress bar.",
          "jsDoc": "/**\n   * Minimum bound of the progress bar.\n   */",
          "type": "number"
        },
        {
          "name": "max",
          "description": "Maximum bound of the progress bar.",
          "jsDoc": "/**\n   * Maximum bound of the progress bar.\n   */",
          "type": "number"
        },
        {
          "name": "indeterminate",
          "description": "Indeterminate state of the progress bar.\nThis property takes precedence over other state properties (min, max, value).",
          "jsDoc": "/**\n   * Indeterminate state of the progress bar.\n   * This property takes precedence over other state properties (min, max, value).\n   */",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "value",
          "description": "Current progress value.",
          "jsDoc": "/**\n   * Current progress value.\n   */",
          "type": "number"
        },
        {
          "name": "min",
          "description": "Minimum bound of the progress bar.",
          "jsDoc": "/**\n   * Minimum bound of the progress bar.\n   */",
          "type": "number"
        },
        {
          "name": "max",
          "description": "Maximum bound of the progress bar.",
          "jsDoc": "/**\n   * Maximum bound of the progress bar.\n   */",
          "type": "number"
        },
        {
          "name": "indeterminate",
          "description": "Indeterminate state of the progress bar.\nThis property takes precedence over other state properties (min, max, value).",
          "jsDoc": "/**\n   * Indeterminate state of the progress bar.\n   * This property takes precedence over other state properties (min, max, value).\n   */",
          "type": "boolean"
        }
      ],
      "events": [],
      "slots": [],
      "cssProperties": [
        {
          "name": "--progress-bar-opacity",
          "description": "Opacity set on the underlying track."
        },
        {
          "name": "--progress-bar-fill-color",
          "description": "Color of the filled progress bar part."
        }
      ]
    }
  ]
}